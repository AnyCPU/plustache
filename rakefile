# rakefile for compiling plustache and tests

require 'rake/clean'
require 'rake/loaders/makefile'

APPLICATION = 'bin/plustache'
TEST = 'bin/plustache_tests'
OBJDIR = "build"
# main plustache files
SRC_FILES = FileList['src/template.cpp', 'src/context.cpp']
SRC_OBJECTS = SRC_FILES.collect { |fn|
                                  File.join(OBJDIR, File.basename(fn).ext('o'))
                               }
# files for unit testing
TEST_FILES = FileList["tests/*.cpp"]
TEST_OBJECTS = TEST_FILES.collect { |fn|
                                  File.join(OBJDIR, File.basename(fn).ext('o'))
                                 }
# files for the plustache binary
BIN_FILES = FileList['src/main.cpp']
BIN_OBJECTS = BIN_FILES.collect { |fn|
                                  File.join(OBJDIR, File.basename(fn).ext('o'))
                                }

# include dirs
INCLUDE_DIRS = ["include", "/usr/local/homebrew/include"]

# compiler/linker stuff
CC = "g++"
LD = "g++"
CCFLAGS = ["-O3","-wall", "-I #{INCLUDE_DIRS.join(" -I")}"]
LDFLAGS = ["-L/usr/local/homebrew/lib"]

# task definitions
task :default => :test

desc "task for compiling and executing unit tests"
task :test =>[TEST] do
  sh "./#{TEST}"
end

desc "task compiling plustache binary"
task :app =>[APPLICATION] do
  sh "./#{APPLICATION}"
end

# generate dependencies
file '.depend.mf' do
  sh "g++ -M -MF .depend.mf -I #{INCLUDE_DIRS.join(' -I')} \
#{SRC_FILES} #{TEST_FILES}"
end

import ".depend.mf"

# main binary rules
directory "bin"
file APPLICATION => ["bin"]
file APPLICATION => SRC_OBJECTS + BIN_OBJECTS do |t|
  sh "#{LD} #{SRC_OBJECTS} #{BIN_OBJECTS} -o #{t.name} #{LDFLAGS.join(" ")} \
-lboost_regex-mt"
end

directory "bin"
file TEST => ["bin"]
file TEST => SRC_OBJECTS + TEST_OBJECTS do |t|
  sh "#{LD} #{TEST_OBJECTS} #{SRC_OBJECTS} -o #{t.name} #{LDFLAGS.join(" ")} \
-lboost_regex-mt -lgtest"
end

# compile rules for object files
directory OBJDIR
(TEST_FILES+SRC_FILES+BIN_FILES).each do |srcfile|
  objfile = File.join(OBJDIR, File.basename(srcfile).ext('o'))
  file objfile => [srcfile, OBJDIR] do
    sh "#{CC} #{CCFLAGS.join(" ")} -c #{srcfile} -o #{objfile}"
  end
end

# cleaning tasks
CLEAN.include("**/*.o", ".depend.mf", "build")
CLOBBER.include("**/*.o", APPLICATION, TEST, ".depend.mf", "build", "bin")

